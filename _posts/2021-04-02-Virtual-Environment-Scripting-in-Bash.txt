---
layout: post
title: Virtual Environment Scripting in Bash
---

I'm riding a bit of an endorphin high - you know the one where you get some code to work and you're reminded of the power of what we're doing here, even if it's just some simple automation. I have [Brian Okken]("http://www.twitter.com/BrianOkken") to thank for tangentially opening my eyes to the world of bash scripting. He had made a comment a while back on the
[Python Bytes]("https://pythonbytes.fm/") podcast about how he automated Python to upgrade PIP every time he created a new virtual environment. After my ~20th time doing it manually I figured I'd reach out to him on Twitter to see if he'd share and he generously did on [Twitter]("https://twitter.com/brianokken/status/1375237707312427015") and via a [GitHub gist]("https://gist.github.com/okken/d166d194e1cb024d88540e8f75ac4b98").

I've added code snippets to my .bashrc file over time with varying results, never fully understanding what was happening. I did the same this time `nano ~/.bashrc` (to edit the file, or in my case, since I'd rather edit it in VSCode, `code ~/.bashrc`), copy and paste the code with `command-c`, `command-v` and... nothing. I didn't know whether I needed to pass in arguments and, looking at the code and not knowing a lick of bash, I couldn't even decipher the very first if statement.

```bash
code
```
